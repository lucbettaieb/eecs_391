.. java:import:: java.util ArrayList

.. java:import:: java.util HashMap

.. java:import:: java.util Iterator

.. java:import:: java.util LinkedList

.. java:import:: java.util List

.. java:import:: java.util Map

.. java:import:: java.util Map.Entry

.. java:import:: java.util Random

.. java:import:: edu.cwru.sepia.action Action

.. java:import:: edu.cwru.sepia.action ActionFeedback

.. java:import:: edu.cwru.sepia.action ActionQueue

.. java:import:: edu.cwru.sepia.action ActionResult

.. java:import:: edu.cwru.sepia.action ActionType

.. java:import:: edu.cwru.sepia.action DirectedAction

.. java:import:: edu.cwru.sepia.action LocatedAction

.. java:import:: edu.cwru.sepia.action LocatedProductionAction

.. java:import:: edu.cwru.sepia.action ProductionAction

.. java:import:: edu.cwru.sepia.action TargetedAction

.. java:import:: edu.cwru.sepia.environment TurnTracker

.. java:import:: edu.cwru.sepia.environment.model.history History

.. java:import:: edu.cwru.sepia.environment.model.state ResourceNode

.. java:import:: edu.cwru.sepia.environment.model.state ResourceType

.. java:import:: edu.cwru.sepia.environment.model.state State

.. java:import:: edu.cwru.sepia.environment.model.state StateCreator

.. java:import:: edu.cwru.sepia.environment.model.state Template

.. java:import:: edu.cwru.sepia.environment.model.state Unit

.. java:import:: edu.cwru.sepia.environment.model.state UnitTemplate

.. java:import:: edu.cwru.sepia.environment.model.state UpgradeTemplate

.. java:import:: edu.cwru.sepia.experiment Configuration

.. java:import:: edu.cwru.sepia.experiment ConfigurationValues

.. java:import:: edu.cwru.sepia.util Direction

.. java:import:: edu.cwru.sepia.util DistanceMetrics

.. java:import:: edu.cwru.sepia.util GameMap

BestEffortModel
===============

.. java:package:: edu.cwru.sepia.environment.model
   :noindex:

.. java:type:: public class BestEffortModel implements Model

   A Model that attempts the best effort. A branch of SimpleModel with some added features: durative actions and turn taking. This model is sequential, processing most actions one at a time. Because of this, it resolves conflicts by allowing them to proceed on a first-come-first-served basis.

Constructors
------------
BestEffortModel
^^^^^^^^^^^^^^^

.. java:constructor:: public BestEffortModel(State init, int seed, StateCreator restartTactic, Configuration configuration)
   :outertype: BestEffortModel

Methods
-------
addActions
^^^^^^^^^^

.. java:method:: @Override public void addActions(Map<Integer, Action> actions, int sendingPlayerNumber)
   :outertype: BestEffortModel

createNewWorld
^^^^^^^^^^^^^^

.. java:method:: @Override public void createNewWorld()
   :outertype: BestEffortModel

executeStep
^^^^^^^^^^^

.. java:method:: @Override public void executeStep()
   :outertype: BestEffortModel

getConfiguration
^^^^^^^^^^^^^^^^

.. java:method:: @Override public Configuration getConfiguration()
   :outertype: BestEffortModel

getHistory
^^^^^^^^^^

.. java:method:: @Override public History getHistory()
   :outertype: BestEffortModel

getState
^^^^^^^^

.. java:method:: @Override public State getState()
   :outertype: BestEffortModel

getVerbose
^^^^^^^^^^

.. java:method:: @Override public boolean getVerbose()
   :outertype: BestEffortModel

isTerminated
^^^^^^^^^^^^

.. java:method:: @Override public boolean isTerminated()
   :outertype: BestEffortModel

save
^^^^

.. java:method:: public void save(String filename)
   :outertype: BestEffortModel

setConfiguration
^^^^^^^^^^^^^^^^

.. java:method:: @Override public void setConfiguration(Configuration configuration)
   :outertype: BestEffortModel

setTurnTracker
^^^^^^^^^^^^^^

.. java:method:: @Override public void setTurnTracker(TurnTracker turnTracker)
   :outertype: BestEffortModel

setVerbose
^^^^^^^^^^

.. java:method:: @Override public void setVerbose(boolean verbose)
   :outertype: BestEffortModel

