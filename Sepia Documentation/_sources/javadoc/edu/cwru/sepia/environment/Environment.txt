.. java:import:: java.util HashMap

.. java:import:: java.util Map

.. java:import:: java.util Random

.. java:import:: java.util.concurrent CountDownLatch

.. java:import:: java.util.concurrent TimeUnit

.. java:import:: java.util.logging Level

.. java:import:: java.util.logging Logger

.. java:import:: java.util.prefs Preferences

.. java:import:: edu.cwru.sepia.action Action

.. java:import:: edu.cwru.sepia.agent Agent

.. java:import:: edu.cwru.sepia.agent ThreadIntermediary

.. java:import:: edu.cwru.sepia.environment.model LessSimpleModel

.. java:import:: edu.cwru.sepia.environment.model Model

.. java:import:: edu.cwru.sepia.environment.model.history History

.. java:import:: edu.cwru.sepia.environment.model.state State.StateView

Environment
===========

.. java:package:: edu.cwru.sepia.environment
   :noindex:

.. java:type:: public class Environment

   Simulates the environment component in a standard Reinforcement Learning setting. One can run episodes from this class.

Constructors
------------
Environment
^^^^^^^^^^^

.. java:constructor:: public Environment(Agent[] connectedagents, Model model, int seed)
   :outertype: Environment

Environment
^^^^^^^^^^^

.. java:constructor:: public Environment(Agent[] connectedagents, Model model, TurnTracker turnTracker)
   :outertype: Environment

Methods
-------
forceNewEpisode
^^^^^^^^^^^^^^^

.. java:method:: public void forceNewEpisode()
   :outertype: Environment

getAgents
^^^^^^^^^

.. java:method:: public final Agent[] getAgents()
   :outertype: Environment

getModel
^^^^^^^^

.. java:method:: public final Model getModel()
   :outertype: Environment

getStepNumber
^^^^^^^^^^^^^

.. java:method:: public int getStepNumber()
   :outertype: Environment

isTerminated
^^^^^^^^^^^^

.. java:method:: public boolean isTerminated()
   :outertype: Environment

runEpisode
^^^^^^^^^^

.. java:method:: public final void runEpisode() throws InterruptedException
   :outertype: Environment

step
^^^^

.. java:method:: public boolean step() throws InterruptedException
   :outertype: Environment

   Step through an episode

   :throws InterruptedException:
   :return: Return whether it has terminated.

terminalStep
^^^^^^^^^^^^

.. java:method:: public final void terminalStep()
   :outertype: Environment

