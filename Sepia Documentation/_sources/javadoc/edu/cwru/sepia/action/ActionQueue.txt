.. java:import:: java.util LinkedList

ActionQueue
===========

.. java:package:: edu.cwru.sepia.action
   :noindex:

.. java:type:: public class ActionQueue

   A data class that stores an action and the proposed subactions to acheive that Required because the full

Fields
------
fullAction
^^^^^^^^^^

.. java:field::  Action fullAction
   :outertype: ActionQueue

primitives
^^^^^^^^^^

.. java:field::  LinkedList<Action> primitives
   :outertype: ActionQueue

Constructors
------------
ActionQueue
^^^^^^^^^^^

.. java:constructor:: public ActionQueue(Action fullAction, LinkedList<Action> primitives)
   :outertype: ActionQueue

Methods
-------
equals
^^^^^^

.. java:method:: @Override public boolean equals(Object other)
   :outertype: ActionQueue

   Returns the equality of this queue's full action with the other queue's full action. Primitives are of no consequence.

getFullAction
^^^^^^^^^^^^^

.. java:method:: public Action getFullAction()
   :outertype: ActionQueue

hasNext
^^^^^^^

.. java:method:: public boolean hasNext()
   :outertype: ActionQueue

hashCode
^^^^^^^^

.. java:method:: @Override public int hashCode()
   :outertype: ActionQueue

   Returns the hash code of the full action. The primitives are of no consequence.

peekPrimitive
^^^^^^^^^^^^^

.. java:method:: public Action peekPrimitive()
   :outertype: ActionQueue

popPrimitive
^^^^^^^^^^^^

.. java:method:: public Action popPrimitive()
   :outertype: ActionQueue

resetPrimitives
^^^^^^^^^^^^^^^

.. java:method:: public void resetPrimitives(LinkedList<Action> primitives)
   :outertype: ActionQueue

toString
^^^^^^^^

.. java:method:: @Override public String toString()
   :outertype: ActionQueue

