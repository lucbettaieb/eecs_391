.. java:import:: java.io InputStream

.. java:import:: java.io OutputStream

.. java:import:: java.util ArrayList

.. java:import:: java.util HashMap

.. java:import:: java.util List

.. java:import:: java.util Map

.. java:import:: java.util.logging Level

.. java:import:: java.util.logging Logger

.. java:import:: edu.cwru.sepia.action Action

.. java:import:: edu.cwru.sepia.action ActionType

.. java:import:: edu.cwru.sepia.action TargetedAction

.. java:import:: edu.cwru.sepia.environment.model.history History

.. java:import:: edu.cwru.sepia.environment.model.state ResourceType

.. java:import:: edu.cwru.sepia.environment.model.state ResourceNode.Type

.. java:import:: edu.cwru.sepia.environment.model.state State.StateView

.. java:import:: edu.cwru.sepia.environment.model.state Template.TemplateView

.. java:import:: edu.cwru.sepia.environment.model.state Unit.UnitView

.. java:import:: edu.cwru.sepia.experiment Configuration

.. java:import:: edu.cwru.sepia.experiment ConfigurationValues

ResourceCollectionAgent
=======================

.. java:package:: edu.cwru.sepia.agent
   :noindex:

.. java:type:: public class ResourceCollectionAgent extends Agent

   This agent will first collect gold to produce a peasant, then the two peasants will collect gold and wood separately until reach goal.

   :author: Feng

Fields
------
currentState
^^^^^^^^^^^^

.. java:field::  StateView currentState
   :outertype: ResourceCollectionAgent

Constructors
------------
ResourceCollectionAgent
^^^^^^^^^^^^^^^^^^^^^^^

.. java:constructor:: public ResourceCollectionAgent(int playernum, String[] arguments)
   :outertype: ResourceCollectionAgent

Methods
-------
getUsage
^^^^^^^^

.. java:method:: public static String getUsage()
   :outertype: ResourceCollectionAgent

initialStep
^^^^^^^^^^^

.. java:method:: @Override public Map<Integer, Action> initialStep(StateView newstate, History.HistoryView statehistory)
   :outertype: ResourceCollectionAgent

loadPlayerData
^^^^^^^^^^^^^^

.. java:method:: @Override public void loadPlayerData(InputStream is)
   :outertype: ResourceCollectionAgent

middleStep
^^^^^^^^^^

.. java:method:: @Override public Map<Integer, Action> middleStep(StateView newState, History.HistoryView statehistory)
   :outertype: ResourceCollectionAgent

savePlayerData
^^^^^^^^^^^^^^

.. java:method:: @Override public void savePlayerData(OutputStream os)
   :outertype: ResourceCollectionAgent

terminalStep
^^^^^^^^^^^^

.. java:method:: @Override public void terminalStep(StateView newstate, History.HistoryView statehistory)
   :outertype: ResourceCollectionAgent

