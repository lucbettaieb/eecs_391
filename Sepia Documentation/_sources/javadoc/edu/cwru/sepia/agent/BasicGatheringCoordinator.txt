.. java:import:: java.io Serializable

.. java:import:: java.util ArrayList

.. java:import:: java.util HashMap

.. java:import:: java.util List

.. java:import:: java.util Map

.. java:import:: java.util Map.Entry

.. java:import:: java.util.logging Level

.. java:import:: java.util.logging Logger

.. java:import:: java.util Random

.. java:import:: edu.cwru.sepia.action Action

.. java:import:: edu.cwru.sepia.agent ScriptedGoalAgent.RelevantStateView

.. java:import:: edu.cwru.sepia.environment.model.state ResourceNode

.. java:import:: edu.cwru.sepia.environment.model.state ResourceType

.. java:import:: edu.cwru.sepia.environment.model.state ResourceNode.ResourceView

.. java:import:: edu.cwru.sepia.environment.model.state State.StateView

.. java:import:: edu.cwru.sepia.environment.model.state Unit.UnitView

BasicGatheringCoordinator
=========================

.. java:package:: edu.cwru.sepia.agent
   :noindex:

.. java:type:: public class BasicGatheringCoordinator implements Serializable

   A basic AI that does simple commanding of gatherer units

Constructors
------------
BasicGatheringCoordinator
^^^^^^^^^^^^^^^^^^^^^^^^^

.. java:constructor:: public BasicGatheringCoordinator(int playerID, Random r)
   :outertype: BasicGatheringCoordinator

Methods
-------
assignActions
^^^^^^^^^^^^^

.. java:method:: public void assignActions(StateView state, RelevantStateView relstate, Map<Integer, Action> actions)
   :outertype: BasicGatheringCoordinator

   Adds gather/deposit actions to the given action map for units previously specified as miners or lumberjacks.

   :param state:
   :param relstate:
   :param actions:

assignGold
^^^^^^^^^^

.. java:method:: public void assignGold(Integer unitID)
   :outertype: BasicGatheringCoordinator

assignIdle
^^^^^^^^^^

.. java:method:: public void assignIdle(Integer unitID)
   :outertype: BasicGatheringCoordinator

assignOther
^^^^^^^^^^^

.. java:method:: public void assignOther(Integer unitID, Action assignment)
   :outertype: BasicGatheringCoordinator

assignWood
^^^^^^^^^^

.. java:method:: public void assignWood(Integer unitID)
   :outertype: BasicGatheringCoordinator

getGoldWorker
^^^^^^^^^^^^^

.. java:method:: public Integer getGoldWorker()
   :outertype: BasicGatheringCoordinator

getIdleWorker
^^^^^^^^^^^^^

.. java:method:: public Integer getIdleWorker()
   :outertype: BasicGatheringCoordinator

getVerbose
^^^^^^^^^^

.. java:method:: public boolean getVerbose()
   :outertype: BasicGatheringCoordinator

getWoodWorker
^^^^^^^^^^^^^

.. java:method:: public Integer getWoodWorker()
   :outertype: BasicGatheringCoordinator

hasGoldWorker
^^^^^^^^^^^^^

.. java:method:: public boolean hasGoldWorker(Integer id)
   :outertype: BasicGatheringCoordinator

hasIdleWorker
^^^^^^^^^^^^^

.. java:method:: public boolean hasIdleWorker(Integer id)
   :outertype: BasicGatheringCoordinator

hasOtherWorker
^^^^^^^^^^^^^^

.. java:method:: public boolean hasOtherWorker(Integer id)
   :outertype: BasicGatheringCoordinator

hasWoodWorker
^^^^^^^^^^^^^

.. java:method:: public boolean hasWoodWorker(Integer id)
   :outertype: BasicGatheringCoordinator

numGoldWorkers
^^^^^^^^^^^^^^

.. java:method:: public int numGoldWorkers()
   :outertype: BasicGatheringCoordinator

numIdleWorkers
^^^^^^^^^^^^^^

.. java:method:: public int numIdleWorkers()
   :outertype: BasicGatheringCoordinator

numWoodWorkers
^^^^^^^^^^^^^^

.. java:method:: public int numWoodWorkers()
   :outertype: BasicGatheringCoordinator

removeUnit
^^^^^^^^^^

.. java:method:: public void removeUnit(Integer unitID)
   :outertype: BasicGatheringCoordinator

setVerbose
^^^^^^^^^^

.. java:method:: public void setVerbose(boolean verbosity)
   :outertype: BasicGatheringCoordinator

