CDL
===

.. java:package:: org.json
   :noindex:

.. java:type:: public class CDL

   This provides static methods to convert comma delimited text into a JSONArray, and to covert a JSONArray into comma delimited text. Comma delimited text is a very popular format for data interchange. It is understood by most database, spreadsheet, and organizer programs.

   Each row of text represents a row in a table or a data record. Each row ends with a NEWLINE character. Each row contains one or more values. Values are separated by commas. A value can contain any character except for comma, unless is is wrapped in single quotes or double quotes.

   The first row usually contains the names of the columns.

   A comma delimited list can be converted into a JSONArray of JSONObjects. The names for the elements in the JSONObjects can be taken from the names in the first row.

   :author: JSON.org

Methods
-------
rowToJSONArray
^^^^^^^^^^^^^^

.. java:method:: public static JSONArray rowToJSONArray(JSONTokener x) throws JSONException
   :outertype: CDL

   Produce a JSONArray of strings from a row of comma delimited values.

   :param x: A JSONTokener of the source text.
   :throws JSONException:
   :return: A JSONArray of strings.

rowToJSONObject
^^^^^^^^^^^^^^^

.. java:method:: public static JSONObject rowToJSONObject(JSONArray names, JSONTokener x) throws JSONException
   :outertype: CDL

   Produce a JSONObject from a row of comma delimited text, using a parallel JSONArray of strings to provides the names of the elements.

   :param names: A JSONArray of names. This is commonly obtained from the first row of a comma delimited text file using the rowToJSONArray method.
   :param x: A JSONTokener of the source text.
   :throws JSONException:
   :return: A JSONObject combining the names and values.

rowToString
^^^^^^^^^^^

.. java:method:: public static String rowToString(JSONArray ja)
   :outertype: CDL

   Produce a comma delimited text row from a JSONArray. Values containing the comma character will be quoted. Troublesome characters may be removed.

   :param ja: A JSONArray of strings.
   :return: A string ending in NEWLINE.

toJSONArray
^^^^^^^^^^^

.. java:method:: public static JSONArray toJSONArray(String string) throws JSONException
   :outertype: CDL

   Produce a JSONArray of JSONObjects from a comma delimited text string, using the first row as a source of names.

   :param string: The comma delimited text.
   :throws JSONException:
   :return: A JSONArray of JSONObjects.

toJSONArray
^^^^^^^^^^^

.. java:method:: public static JSONArray toJSONArray(JSONTokener x) throws JSONException
   :outertype: CDL

   Produce a JSONArray of JSONObjects from a comma delimited text string, using the first row as a source of names.

   :param x: The JSONTokener containing the comma delimited text.
   :throws JSONException:
   :return: A JSONArray of JSONObjects.

toJSONArray
^^^^^^^^^^^

.. java:method:: public static JSONArray toJSONArray(JSONArray names, String string) throws JSONException
   :outertype: CDL

   Produce a JSONArray of JSONObjects from a comma delimited text string using a supplied JSONArray as the source of element names.

   :param names: A JSONArray of strings.
   :param string: The comma delimited text.
   :throws JSONException:
   :return: A JSONArray of JSONObjects.

toJSONArray
^^^^^^^^^^^

.. java:method:: public static JSONArray toJSONArray(JSONArray names, JSONTokener x) throws JSONException
   :outertype: CDL

   Produce a JSONArray of JSONObjects from a comma delimited text string using a supplied JSONArray as the source of element names.

   :param names: A JSONArray of strings.
   :param x: A JSONTokener of the source text.
   :throws JSONException:
   :return: A JSONArray of JSONObjects.

toString
^^^^^^^^

.. java:method:: public static String toString(JSONArray ja) throws JSONException
   :outertype: CDL

   Produce a comma delimited text from a JSONArray of JSONObjects. The first row will be a list of names obtained by inspecting the first JSONObject.

   :param ja: A JSONArray of JSONObjects.
   :throws JSONException:
   :return: A comma delimited text.

toString
^^^^^^^^

.. java:method:: public static String toString(JSONArray names, JSONArray ja) throws JSONException
   :outertype: CDL

   Produce a comma delimited text from a JSONArray of JSONObjects using a provided list of names. The list of names is not included in the output.

   :param names: A JSONArray of strings.
   :param ja: A JSONArray of JSONObjects.
   :throws JSONException:
   :return: A comma delimited text.

